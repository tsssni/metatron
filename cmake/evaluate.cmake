function(metatron_evaluate unit path mode)
	set(target metatron-${unit})

	# collect sources
	if(${mode} STREQUAL "ext")
		message(STATUS "build external library ${target}")
		add_library(${target} INTERFACE)
	else()
		file(GLOB_RECURSE sources ${path}/*.cpp)
		file(GLOB_RECURSE headers ${path}/include/metatron/${unit}/*.hpp)
		if(sources)
			if(${mode} STREQUAL "exe")
				message(STATUS "build executable ${target}")
				add_executable(${target} ${sources})
			else()
				message(STATUS "build library ${target}")
				add_library(${target} SHARED EXCLUDE_FROM_ALL ${sources})
			endif()
			target_include_directories(${target} PUBLIC ${path}/include)
		elseif(${mode} STREQUAL "src")
			if(headers)
				message(STATUS "build header-only library ${target}")
			else()
				message(STATUS "build interface library ${target}")
			endif()
			add_library(${target} INTERFACE)
			target_include_directories(${target} INTERFACE ${path}/include)
			set(mode "inc")
		else()
			message(FATAL_ERROR "sources not found")
		endif()
	endif()

	set_property(TARGET ${target} PROPERTY metatron-path ${path})
	set_property(TARGET ${target} PROPERTY metatron-mode ${mode})
	if(${mode} STREQUAL "ext" OR ${mode} STREQUAL "inc")
		set_property(TARGET ${target} PROPERTY metatron-access INTERFACE)
	else()
		set_property(TARGET ${target} PROPERTY metatron-access PUBLIC)
	endif()
endfunction()
